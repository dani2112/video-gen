# Wan2GP - CUDA development Docker image with compiler support
# FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu20.04
FROM nvidia/cuda:12.8.0-devel-ubuntu24.04

# FROM pytorch/pytorch:2.7.1-cuda12.8-cudnn9-runtime

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility \
    HF_HOME=/app/ckpts \
    TRANSFORMERS_CACHE=/app/ckpts \
    HF_HUB_CACHE=/app/ckpts \
    CUDA_HOME=/usr/local/cuda \
    PATH=/usr/local/cuda/bin:$PATH \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH \
    PYENV_ROOT=/opt/pyenv \
    PATH=/opt/pyenv/bin:/opt/pyenv/shims:$PATH

# Set working directory
WORKDIR /app

# Install system dependencies required for pyenv and Python compilation
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    wget \
    curl \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libxml2-dev \
    libxmlsec1-dev \
    libffi-dev \
    liblzma-dev \
    libgl1-mesa-dri \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install pyenv
RUN git clone https://github.com/pyenv/pyenv.git /opt/pyenv && \
    cd /opt/pyenv && \
    git checkout v2.3.36

# Install Python 3.11.7 using pyenv and ensure environment is properly set
RUN eval "$(pyenv init -)" && \
    pyenv install 3.11.7 && \
    pyenv global 3.11.7 && \
    pyenv rehash

# Ensure Python environment is properly configured
RUN echo 'eval "$(pyenv init -)"' >> /root/.bashrc && \
    echo 'eval "$(pyenv init -)"' >> /root/.profile

# Update PATH to ensure pyenv python is used
ENV PATH="/opt/pyenv/shims:/opt/pyenv/bin:$PATH"

# Verify Python installation and upgrade pip
RUN python --version && \
    python -m pip install --upgrade pip

# Install PyTorch with CUDA 12.4 support
# RUN pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124

# Clone Wan2GP repository
RUN git clone --depth 1 https://github.com/deepbeepmeep/Wan2GP.git .

# Install Wan2GP requirements (this should install torch)
RUN python -m pip install --no-cache-dir -r requirements.txt

# Verify torch is available and install SageAttention2
RUN python -c "import torch; print(f'PyTorch version: {torch.__version__}')" && \
    git clone https://github.com/thu-ml/SageAttention.git /tmp/SageAttention && \
    cd /tmp/SageAttention && \
    python -m pip install --no-build-isolation -e . && \
    rm -rf /tmp/SageAttention

# Create directory for models (to be mounted as volume) - this is where Wan2GP actually downloads models
RUN mkdir -p /app/ckpts

# Expose port (assuming it might have a web interface or for port forwarding)
EXPOSE 7860

# Default command to run Wan2GP text-to-video
CMD ["python", "wgp.py", "--i2v"]
